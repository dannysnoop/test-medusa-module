{"version":3,"file":"GuestCartController.js","sourceRoot":"","sources":["../../src/controllers/GuestCartController.ts"],"names":[],"mappings":";;;AAIA,MAAa,mBAAmB;IACtB,gBAAgB,CAAyB;IAEjD,YAAY,gBAAwC;QAClD,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;IAC3C,CAAC;IAED,2DAA2D;IAC3D,KAAK,CAAC,kBAAkB,CAAC,GAAY,EAAE,GAAa;QAClD,IAAI,CAAC;YACH,MAAM,EAAE,MAAM,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAC5B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YACnF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC;QAAC,OAAO,KAAS,EAAE,CAAC;YACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAED,cAAc;IACd,KAAK,CAAC,UAAU,CAAC,GAAY,EAAE,GAAa;QAC1C,IAAI,CAAC;YACH,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;YAC1B,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC;QAAC,OAAO,KAAS,EAAE,CAAC;YACnB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;CACF;AA5BD,kDA4BC","sourcesContent":["// src/controllers/GuestCartController.ts\r\nimport { Request, Response } from \"express\";\r\nimport { GuestCartModuleService } from \"../services/guest-cart\";\r\n\r\nexport class GuestCartController {\r\n  private guestCartService: GuestCartModuleService;\r\n\r\n  constructor(guestCartService: GuestCartModuleService) {\r\n    this.guestCartService = guestCartService;\r\n  }\r\n\r\n  // Create a temporary customer and generate an access token\r\n  async createTempCustomer(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { params } = req.body;\r\n      const result = await this.guestCartService.createTempCustomerWithCart(params, req);\r\n      res.status(200).json(result);\r\n    } catch (error:any) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n\r\n  // Merge carts\r\n  async mergeCarts(req: Request, res: Response): Promise<void> {\r\n    try {\r\n      const { data } = req.body;\r\n      const result = await this.guestCartService.MergeCart(data);\r\n      res.status(200).json(result);\r\n    } catch (error:any) {\r\n      res.status(500).json({ error: error.message });\r\n    }\r\n  }\r\n}\r\n"]}